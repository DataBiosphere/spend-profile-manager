plugins {
    id 'maven-publish'
    id "java"
    id 'com.jfrog.artifactory' version '4.18.2'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'

    // For JShell support
    // https://gitlab.com/barfuin/gradle-taskinfo
    id 'org.barfuin.gradle.taskinfo' version '1.1.1'
    id "com.github.mrsarm.jshell.plugin" version "1.1.0"
}

def artifactory_repo_key = System.getenv("ARTIFACTORY_REPO_KEY") != null ? System.getenv("ARTIFACTORY_REPO_KEY") : 'libs-snapshot-local'
def artifactory_username = System.getenv('ARTIFACTORY_USERNAME')
def artifactory_password = System.getenv('ARTIFACTORY_PASSWORD')

// If true, search local repository (~/.m2/repository/) first for dependencies.
def useMavenLocal = false

allprojects {
    group 'bio.terra'
    version '0.1.0-SNAPSHOT'
    // TODO bump to 17
    sourceCompatibility = 11

    ext {
        openApiOutputDir = "${buildDir}/generated"
        resourceDir = "${rootDir}/service/src/main/resources"
    }

    // specifying versions for dependencies, not adding the dependencies themselves (yet)
    apply plugin: "io.spring.dependency-management"
    dependencyManagement {
        dependencies {
            dependency group: "io.swagger.core.v3", name: "swagger-annotations", version: "2.1.12"
            dependency group: "io.swagger.codegen.v3", name: "swagger-codegen-cli", version: "3.0.31"
        }
    }

    apply plugin: "idea"
    idea {
        module {
            downloadJavadoc = true
        }
    }

    repositories {
        if (useMavenLocal) {
            mavenLocal() // must be listed first to take effect
        }
        mavenCentral()
        maven {
            url 'https://broadinstitute.jfrog.io/broadinstitute/libs-release/'
        }
        maven {
            url 'https://broadinstitute.jfrog.io/broadinstitute/libs-snapshot-local/'
        }
    }
}

gradle.taskGraph.whenReady { taskGraph ->
    if (taskGraph.hasTask(artifactoryPublish) &&
            (artifactory_username == null || artifactory_password == null)) {
        throw new GradleException("Set env vars ARTIFACTORY_USERNAME and ARTIFACTORY_PASSWORD to publish")
    }
}

artifactory {
    publish {
        contextUrl = "https://broadinstitute.jfrog.io/broadinstitute/"
        repository {
            repoKey = "${artifactory_repo_key}"
            // The Artifactory repository key to publish to
            username = "${artifactory_username}" // The publisher user name
            password = "${artifactory_password}" // The publisher password
        }
        defaults {
            // This is how we tell the Artifactory Plugin which artifacts should be published to Artifactory.
            // Reference to Gradle publications defined in the build script.
            publications("spendProfileManagerClientLibrary")
            publishArtifacts = true
            publishPom = true
        }
    }
}

task minniekenny(type: Exec) {
    commandLine 'sh', "${rootDir}/minnie-kenny.sh"
}
